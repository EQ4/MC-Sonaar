#N canvas 127 22 1115 754 10;
#X declare -lib mrpeach;
#X declare -path ../bin -path ../utils;
#N canvas 542 22 1036 931 fakeApp 0;
#X text 155 -9 simmulation of external app : do what you wnat here
or adopt this structure in any complementary application supporting
osc;
#X obj 272 221 metro 200;
#X obj 266 177 loadbang;
#X msg 266 199 1;
#X text 156 34 the only limitation is to call UID that appends in the
range of bufferlength (here 24s);
#X obj 102 367 vradio 15 1 0 8 empty empty empty 0 -8 0 10 -262144
-1 -1 7;
#X obj 122 367 vradio 15 1 0 8 empty empty empty 0 -8 0 10 -262144
-1 -1 6;
#X obj 143 367 vradio 15 1 0 8 empty empty empty 0 -8 0 10 -262144
-1 -1 5;
#X obj 162 367 vradio 15 1 0 8 empty empty empty 0 -8 0 10 -262144
-1 -1 4;
#X obj 189 367 vradio 15 1 0 8 empty empty empty 0 -8 0 10 -262144
-1 -1 3;
#X obj 209 367 vradio 15 1 0 8 empty empty empty 0 -8 0 10 -262144
-1 -1 2;
#X obj 230 367 vradio 15 1 0 8 empty empty empty 0 -8 0 10 -262144
-1 -1 1;
#X obj 249 367 vradio 15 1 0 8 empty empty empty 0 -8 0 10 -262144
-1 -1 0;
#X obj -3 144 sort;
#X obj -66 76 list split 1;
#X obj -30 119 list split 50;
#X obj -149 137 list split 50;
#X obj 21 544 packel;
#X obj 137 257 f;
#X obj 163 257 + 1;
#X obj 191 260 % 8;
#X obj 270 242 t b;
#X floatatom 128 505 5 0 0 0 - - -;
#X obj 18 502 l;
#X obj -10 622 packel;
#X obj -13 580 l;
#X obj 97 340 hradio 22 1 0 8 empty empty empty 0 -8 0 10 -262144 -1
-1 0;
#X obj 95 769 PRINT;
#X obj 127 306 route 0 1 2 3 4 5 6 7;
#X obj -10 646 list prepend /play;
#X obj -67 18 dumpOSC 9009;
#X obj -27 794 sendOSC;
#X msg -168 705 connect localhost 9010;
#X obj -14 763 prepend send;
#X obj -165 678 loadbang;
#X obj -31 100 list append;
#X obj -137 104 list append;
#X obj -6 685 list-len;
#X obj -6 701 == 2;
#X obj -4 744 l;
#X obj -8 665 t l l;
#X obj -6 720 sel 1;
#X msg 31 145 -1;
#X msg 65 145 1;
#X text 381 227 generate our own metronome;
#X text 44 702 integrity check;
#X text 216 769 send a play order to pd with the UID;
#X floatatom 335 192 5 0 0 0 - - -;
#X obj 166 530 route 0;
#X obj -69 50 OSCroute /centroid.mean;
#X obj -17 230 packel 0 4 8 12 16 20 24 28;
#X obj -12 281 pack 0 0 0 0 0 0 0 0;
#X text 92 141 sort order;
#X obj 93 167 list-len;
#X obj -31 192 / 8;
#X obj -7 194 / 4;
#X obj 16 194 * 0.375;
#X obj 63 194 / 2;
#X obj 87 195 * 0.625;
#X obj 131 198 * 0.75;
#X obj 175 200 * 0.875;
#X obj 229 208 - 1;
#X obj 24 586 t b f;
#X obj 55 508 t b f;
#X obj 150 113 cnv 15 700 18 empty empty this_processing_could_be_implemented_in_few_line_in_any_OOP_language_suporting_OSC
20 12 0 14 -4034 -66577 0;
#X text 157 68 in this example we decide to regenerate a sequence the
sorted centroid.means;
#X text 355 396 sequence it \, 0 represent silences <--play here!;
#X connect 1 0 21 0;
#X connect 2 0 3 0;
#X connect 3 0 1 0;
#X connect 5 0 22 0;
#X connect 6 0 22 0;
#X connect 7 0 22 0;
#X connect 8 0 22 0;
#X connect 9 0 22 0;
#X connect 10 0 22 0;
#X connect 11 0 22 0;
#X connect 12 0 22 0;
#X connect 13 1 50 0;
#X connect 13 1 53 0;
#X connect 14 0 36 0;
#X connect 14 1 35 0;
#X connect 15 0 13 0;
#X connect 15 0 35 1;
#X connect 15 2 13 0;
#X connect 15 2 35 1;
#X connect 16 0 25 1;
#X connect 16 0 36 1;
#X connect 16 2 25 1;
#X connect 16 2 36 1;
#X connect 17 0 62 0;
#X connect 18 0 19 0;
#X connect 18 0 26 0;
#X connect 18 0 28 0;
#X connect 19 0 20 0;
#X connect 20 0 18 1;
#X connect 21 0 18 0;
#X connect 22 0 48 0;
#X connect 23 0 17 0;
#X connect 24 0 29 0;
#X connect 25 0 24 0;
#X connect 28 0 5 0;
#X connect 28 1 6 0;
#X connect 28 2 7 0;
#X connect 28 3 8 0;
#X connect 28 4 9 0;
#X connect 28 5 10 0;
#X connect 28 6 11 0;
#X connect 28 7 12 0;
#X connect 29 0 40 0;
#X connect 30 0 49 0;
#X connect 32 0 31 0;
#X connect 33 0 31 0;
#X connect 34 0 32 0;
#X connect 35 0 15 0;
#X connect 36 0 16 0;
#X connect 37 0 38 0;
#X connect 38 0 41 0;
#X connect 39 0 33 0;
#X connect 39 0 27 0;
#X connect 40 0 37 0;
#X connect 40 1 39 1;
#X connect 41 0 39 0;
#X connect 42 0 13 1;
#X connect 43 0 13 1;
#X connect 47 0 1 1;
#X connect 48 1 63 0;
#X connect 49 0 14 0;
#X connect 50 0 51 0;
#X connect 50 1 51 1;
#X connect 50 2 51 2;
#X connect 50 3 51 3;
#X connect 50 4 51 4;
#X connect 50 5 51 5;
#X connect 50 6 51 6;
#X connect 50 7 51 7;
#X connect 51 0 23 1;
#X connect 53 0 54 0;
#X connect 53 0 55 0;
#X connect 53 0 56 0;
#X connect 53 0 57 0;
#X connect 53 0 58 0;
#X connect 53 0 59 0;
#X connect 53 0 60 0;
#X connect 53 0 61 0;
#X connect 54 0 50 1;
#X connect 55 0 50 2;
#X connect 56 0 50 3;
#X connect 57 0 50 4;
#X connect 58 0 50 5;
#X connect 59 0 50 6;
#X connect 60 0 50 7;
#X connect 61 0 50 8;
#X connect 62 0 25 0;
#X connect 62 1 24 1;
#X connect 63 0 23 0;
#X connect 63 1 17 1;
#X restore 553 135 pd fakeApp;
#X obj 7 145 cnv 15 110 18 empty empty empty 20 12 0 14 -204786 -66577
0;
#X obj 326 1006 output~;
#X obj 391 962 *~;
#X msg 25 428 reset;
#X text 8 29 =================;
#X obj 436 902 delread~ deline;
#X text 394 1009 (1) DSP on;
#X text 399 1026 & volume up;
#X obj 11 146 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 1
1;
#X msg 31 167 loop \$1;
#X obj 31 146 tgl 15 1 empty empty empty 17 7 0 10 -262144 -1 -1 1
1;
#X text 50 145 (2) play!;
#X obj 11 260 bng 20 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 67 448 list_iot 24000;
#X obj 7 121 cnv 15 360 18 empty empty empty 20 12 0 14 -204800 -66577
0;
#X text 32 122 Audio: Bonobo - The North Borders (2013) - Cirrus;
#N canvas 1408 73 383 143 init 0;
#X obj -31 39 loadbang;
#X obj -31 98 soundfiler;
#X obj -31 120 table sample 4410;
#X msg -31 60 read -resize ./soundfiles/Bonobo-TheNorthBorders-Cirrus.wav
sample;
#X connect 0 0 3 0;
#X connect 3 0 1 0;
#X restore 571 48 pd init;
#X obj 29 212 delwrite~ deline 24000;
#X obj 515 337 addslash;
#X obj 195 308 f;
#X obj 219 307 + 1;
#X obj 95 489 list_value 24000;
#X obj 247 306 % 20000;
#X obj 11 188 tabplay2~ sample;
#X obj 509 275 list split 1;
#X obj 192 334 s \$0-count;
#X obj 623 277 r \$0-count;
#X obj 513 316 list append;
#X obj 543 297 list prepend 0;
#X obj -13 306 s \$0-curdesc;
#X obj 506 250 r \$0-curdesc;
#X obj 514 358 route list;
#X obj 513 378 prepend send;
#X text 500 223 send indexed features : /name index value;
#X obj 187 462 r \$0-count;
#X obj 593 379 PRINT;
#X obj 46 254 route list;
#X obj 47 277 t a a;
#X obj 112 263 route i.strength;
#X text 188 211 cache last 24seconds of audio;
#X obj 432 51 import mrpeach;
#X obj 426 25 declare -path ../bin -path ../utils;
#X obj 403 594 OSCroute /play;
#X obj 402 665 list-find;
#X obj 452 644 l;
#X obj 401 725 list split;
#X obj 95 509 s \$0-syncIdx;
#X obj 452 621 r \$0-syncIdx;
#X obj 4 491 s \$0-syncTimes;
#X text 206 284 identifies onsets with a UID;
#X text 4 529 keep track of index vs ioi times in the buffer: - synctimes
is list of ioi - syncidx is the list of UID with synchronized with
synctimes;
#X obj 477 689 r \$0-syncTimes;
#X obj 401 706 l;
#X obj 430 744 sum;
#X floatatom 476 759 7 0 0 0 - - -;
#X text 9 14 6 Asynchroneous OSC exemple showing use of external app
;
#X obj 123 309 s \$0-onset;
#X obj 166 286 t b b;
#X obj 67 425 r \$0-onset;
#X obj 68 467 t l l;
#X obj 428 790 timer;
#X obj 363 767 r \$0-onset;
#X obj 413 811 +;
#X obj 337 831 packel;
#X text 481 791 add elapsed time since last onset to the sum of ioi
;
#X obj 412 832 - 5.8;
#X text 466 830 correction to get full attack of onset;
#X obj 430 766 t f b;
#X obj 360 874 del;
#X obj 411 880 t b f;
#X obj 405 923 vline~ 1;
#X obj 556 495 sendOSC;
#X obj 677 437 loadbang;
#X msg 625 465 connect localhost 9009;
#X obj 403 568 dumpOSC 9010;
#X obj 403 620 t i b;
#X msg 362 895 0 10;
#X msg 405 900 1 20;
#X obj 425 943 *~;
#X obj 411 852 trapenv 2;
#X text 588 646 replay part controlled from external app;
#X obj 400 684 t b f f;
#X obj 339 851 t b b f;
#X obj 8 235 essentiaRT~ 20;
#X obj 498 198 cnv 15 360 18 empty empty Send_indexed_descriptors 20
12 0 14 -204800 -66577 0;
#X obj 5 398 cnv 15 360 18 empty empty store_data_:_idx_and_iot 20
12 0 14 -204800 -66577 0;
#X obj 392 538 cnv 15 360 18 empty empty play_requested_sample 20 12
0 14 -204800 -66577 0;
#X obj 552 115 cnv 15 450 18 empty empty simulation_of_external_app_comunicating_only_via_OSC
20 12 0 14 -204800 -66577 0;
#X floatatom 482 812 5 0 0 0 - - -;
#X connect 3 0 2 1;
#X connect 3 0 2 0;
#X connect 4 0 14 0;
#X connect 6 0 3 0;
#X connect 9 0 24 0;
#X connect 10 0 24 0;
#X connect 11 0 10 0;
#X connect 14 0 60 0;
#X connect 19 0 32 0;
#X connect 20 0 21 0;
#X connect 20 0 26 0;
#X connect 21 0 23 0;
#X connect 22 0 47 0;
#X connect 23 0 20 1;
#X connect 24 0 18 0;
#X connect 24 0 84 0;
#X connect 25 0 28 0;
#X connect 25 1 29 0;
#X connect 27 0 29 1;
#X connect 28 0 19 0;
#X connect 29 0 28 1;
#X connect 31 0 25 0;
#X connect 32 0 33 0;
#X connect 33 0 36 0;
#X connect 33 0 72 0;
#X connect 35 0 22 1;
#X connect 37 0 38 0;
#X connect 38 0 30 0;
#X connect 38 1 39 0;
#X connect 39 0 58 0;
#X connect 43 0 76 0;
#X connect 44 0 82 0;
#X connect 45 0 44 1;
#X connect 46 1 54 0;
#X connect 48 0 45 1;
#X connect 52 0 53 1;
#X connect 53 0 46 0;
#X connect 53 0 64 0;
#X connect 54 0 55 0;
#X connect 54 0 68 0;
#X connect 58 0 57 0;
#X connect 58 1 20 0;
#X connect 59 0 14 0;
#X connect 60 0 49 0;
#X connect 60 1 22 0;
#X connect 61 0 63 1;
#X connect 61 0 89 0;
#X connect 62 0 61 0;
#X connect 63 0 66 0;
#X connect 64 0 83 0;
#X connect 66 0 80 0;
#X connect 68 0 63 0;
#X connect 68 1 61 1;
#X connect 69 0 77 0;
#X connect 70 0 78 0;
#X connect 70 1 6 0;
#X connect 71 0 79 0;
#X connect 73 0 74 0;
#X connect 74 0 72 0;
#X connect 75 0 43 0;
#X connect 76 0 44 0;
#X connect 76 1 45 0;
#X connect 77 0 71 0;
#X connect 78 0 71 0;
#X connect 79 0 3 1;
#X connect 80 0 70 0;
#X connect 80 1 79 1;
#X connect 82 0 53 0;
#X connect 82 1 46 1;
#X connect 82 2 64 1;
#X connect 83 1 69 0;
#X connect 83 2 69 1;
#X connect 84 1 13 0;
#X connect 84 1 37 0;
#X connect 84 2 30 0;
